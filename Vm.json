{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Location": {
            "type": "string",
            "metadata": {
                "description": "deployment Location"
            }
        },
        "WindowsOSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "The Windows Version of the VM"
            }
        },
        "VmName": {
            "type": "string",
            "metadata": {
                "title":"vm Name",
                "Description": "This is the Name of your VM"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "az-admin",
            "metadata": {
                "description": "Username for Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password For Virtual Machine."
            }
        },
        "VirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "New or Existing Vnet Name."
            }
        },
        "virtualNetworkNeworExisting": {
            "type": "string",
            "metadata": {
                "description": "Boolean indicating whether the VNet is new or existing"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "VNet address prefix"
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group of the VNet"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "New or Existing subnet Name"
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Subnet address prefix"
            }
        },
        "baseUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "artifactsBaseUrl": "URL to acquire other templates"
            }
        }
    },
    "functions": [],
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
        "publicIPAddressName": "[concat(uniqueString(resourceGroup().id),'IP')]",
        "vmName": "[parameters('vmName')]",
        "nicName": "[concat(parameters('vmName'),'Nic')]",
        "vnetId": {
            "new":"[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
            "existing": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
        },
        "subnetId": "[concat(variables('vnetId')[parameters('virtualNetworkNewOrExisting')],'/subnets/',parameters('subnetName'))]",
        "publicIPAddressType": "Dynamic"
    },
    "resources": [
        {
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion":"2021-02-01",
            "name": "[parameters('VirtualNetworkName')]",
            "location":"[parameters('location')]",
            "properties":{
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2021-02-01",
            "location":"[parameters('location')]",
            "properties":  {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2021-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipconfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-04-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    }
  ]
}
